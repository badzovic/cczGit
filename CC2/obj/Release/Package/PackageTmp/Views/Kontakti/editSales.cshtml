@model CC2.Models.Kontakti
@{
    ViewBag.Title = "Edit";
}


<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="container-fluid py-4">
                    <div class="row">
                        <div class="col-lg-9 col-12 mx-auto">
                            <div class="card card-body mt-4">
                                <h6 class="mb-0">Novi kontakt</h6>
                                <p class="text-sm mb-0">Kreiraj novi kontakt</p>
                                <p class="text-sm mb-0"> </p>
                                @if (TempData["Success"] != null)
                                {
                                    <div style="margin-left:0px;" id="successPopup" class="custom-popup">
                                        <span style="color:green;" class="custom-popup-content">@TempData["Success"]</span>


                                    </div>
                                }
                                @if (TempData["Error"] != null)
                                {
                                    <div style="margin-left:23px;" id="errorPopup" class="custom-popup">
                                        <span style="color:darkred;" class="custom-popup-content">@TempData["Error"]</span>


                                    </div>
                                }
                                <hr class="horizontal dark my-3">

                                @using (Html.BeginForm("editSales", "Kontakti", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()

                                    <!-- Hidden field for ID -->
                                    @Html.HiddenFor(x => x.Id)

                                    <!-- Hidden field for TERMIN_ID -->
                                    @Html.HiddenFor(x => x.terminId)

                                    <div class="row">
                                        <div class="col-6">
                                            <label class="form-label">Firma</label>
                                            @Html.TextBoxFor(x => x.firma, new { @name = "firma", placeholder = "Firma", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.firma)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">Broj kartica</label>
                                            @Html.TextBoxFor(x => x.brojkartica, new { @name = "brojkartica", placeholder = "Broj kartica", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.ime)
                                        </div>

                                        <div class="col-6">
                                            <label class="form-label">Ime</label>
                                            @Html.TextBoxFor(x => x.ime, new { @name = "ime", placeholder = "Ime", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.ime)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">Prezime</label>
                                            @Html.TextBoxFor(x => x.prezime, new { @name = "prezime", placeholder = "Prezime", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.prezime)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">Adresa</label>
                                            @Html.TextBoxFor(x => x.adresa, new { @name = "adresa", placeholder = "Adresa", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.adresa)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">PLZ</label>
                                            @Html.TextBoxFor(x => x.plz, new { @name = "plz", placeholder = "plz", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.plz)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">Prefix</label>
                                            @Html.TextBoxFor(x => x.prefix, new { @name = "prefix", placeholder = "prefix", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.prefix)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">Kontakt broj</label>
                                            @Html.TextBoxFor(x => x.broj, new { @name = "broj", placeholder = "broj", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.broj)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">Email</label>
                                            @Html.TextBoxFor(x => x.email, new { @name = "email", placeholder = "email", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.email)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">Fax</label>
                                            @Html.TextBoxFor(x => x.fax, new { @name = "fax", placeholder = "fax", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.fax)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">Grad</label>
                                            @Html.TextBoxFor(x => x.grad, new { @name = "grad", placeholder = "grad", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.grad)
                                        </div>


                                    </div>

                                    <hr class="horizontal dark my-3">
                                    <div class="row">
                                        <div class="col-1">
                                            <label class="form-label">Prefix</label>
                                            @Html.TextBoxFor(x => x.prefix, new { required = "required", @id = "prefixInput", placeholder = "prefix", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.prefix)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">Broj</label>
                                            @Html.TextBoxFor(x => x.broj, new { required = "required", @name = "broj", placeholder = "Unesite broj telefona bez državnog prefiksa", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.broj)
                                        </div>
                                        <p>&nbsp;</p>
                                        <a class="btn btn_primary text-uppercase" id="poziv" style="display:block;" href="tel:@Model.prefix@Model.broj">
                                            POZOVI BROJ 1
                                        </a>
                                        <div class="col-1">
                                            <label class="form-label">Prefix</label>
                                            @Html.TextBoxFor(x => x.prefix, new { required = "required", @id = "prefixInput", placeholder = "prefix", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.prefix)
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label">Broj2</label>
                                            @Html.TextBoxFor(x => x.broj2, new { @name = "broj", placeholder = "Unesite broj telefona bez državnog prefiksa", @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.broj2)
                                        </div>
                                        <p>&nbsp;</p>
                                        <a class="btn btn_primary text-uppercase" id="poziv2" style="display:block;" href="tel:@Model.prefix@Model.broj2">
                                            POZOVI BROJ 2
                                        </a>

                                    </div>
                                    <p>&nbsp;</p>

                                    <div class="row">
                                        <div class="row">
                                            <div class="col-6">
                                                <label>Datum i vrijeme termina (od)</label>
                                                @Html.TextBoxFor(model => model.terminDate, new
                                                {
                                                    @class = "form-control",
                                                    @type = "datetime-local",
                                                    @Value = Model.terminDate.HasValue
                                                             ? Model.terminDate.Value.ToString("yyyy-MM-ddTHH:mm")
                                                             : ""
                                                })
                                            </div>
                                            <div class="col-6">
                                                <label>Datum i vrijeme termina (do)</label>
                                                @Html.TextBoxFor(model => model.terminEndDate, new
                                                {
                                                    @class = "form-control",
                                                    @type = "datetime-local",
                                                    @Value = Model.terminEndDate.HasValue
                                                             ? Model.terminEndDate.Value.ToString("yyyy-MM-ddTHH:mm")
                                                             : ""
                                                })
                                            </div>
                                        </div>
                                        <p>&nbsp;</p>
                                        <iframe src="@Url.Action("Kalendar", "Kontakti")?embed=true"
                                                width="100%"
                                                height="800"
                                                style="border:none;">
                                        </iframe>
                                        <p>&nbsp;</p>
                                        <div class="col-12">
                                            <label for="Komentar" class="form-label">Komentar</label>
                                            @Html.TextAreaFor(m => m.komentar, new { @class = "form-control", rows = "6", placeholder = "Komentar...", @tabindex = "5", @style = "border-color: #d3d3d3;", id = "Komentar" })
                                            @Html.ValidationMessageFor(m => m.komentar)
                                        </div>
                                    </div>
                                    @*<p>&nbsp;</p>
                                        <div id="additionalElements">
                                            <div class="uk-width-1-1">
                                                <p><span style="color: red;"></span> <span>Napravi termin (Ukoliko ne zelite zakazati, ostavite prazno)</span></p>
                                            </div>
                                            <div class="uk-width-1-1 uk-width-1-1@s">
                                                @Html.TextBoxFor(model => model.terminDate, new { @class = "form-control datetimepicker", @type = "datetime-local" })
                                            </div>
                                        </div>*@
                                    <p>&nbsp;</p>
                                    <div class="col-12">
                                        <button type="submit" class="btn btn-outline-primary">Sacuvaj</button>

                                        <a style="margin-left:5%;" href="#" onclick="return nijeZainteresovan(@Model.Id)" class="btn btn-outline-secondary">Nije zainteresovan</a>
                                        <a href="#" onclick="return uPregovorima(@Model.Id)" class="btn btn-outline-secondary">U pregovorima</a>
                                        <a href="#" onclick="return nijeDobijen(@Model.Id)" class="btn btn-outline-secondary">Nije dobijen</a>
                                        <a style="margin-left:1%;" href="#" onclick="return prodat(@Model.Id)" class="btn btn-primary">             PRODAT             </a>

                                        <a style="margin-left:17%;" href="#" onclick="goBack()" class="btn btn-primary">Nazad</a>
                                    </div>
                                }



                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Content/js/plugins/datatables.js"></script>
<script>
    function goBack() {
        window.history.back();
    }
</script>
<script>
    function prodat(itemId) {

        var confirmResult = confirm("Jeste li sigurni?");

        if (confirmResult) {
            // If the user clicks "OK", continue to the action
            window.location.href = "@Url.Action("prodat", "Pregled")" + "?id=" + @Model.Id;
        }

        // Return false to prevent the default link behavior
        return false;
    }
</script>
<script>
    function nijeDobijen(itemId) {
        if (!confirm("Jeste li sigurni?")) return;

        fetch('/Pregled/NijeDobijen', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: itemId })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Uspješno ažurirano!");
                    window.location.href = '/Pregled';
                } else {
                    alert("Greška: " + data.message);
                }
            })
            .catch(error => {
                console.error("Greška:", error);
                alert("Došlo je do greške prilikom komunikacije sa serverom.");
            });
    }
</script>

<script>
    function nijeZainteresovan(itemId) {

        var confirmResult = confirm("Jeste li sigurni?");

        if (confirmResult) {
            // If the user clicks "OK", continue to the action
            window.location.href = "@Url.Action("nijeZainteresovanSales", "Pregled")" + "?id=" + @Model.Id;
        }

        // Return false to prevent the default link behavior
        return false;
    }
</script>
<script>
    function uPregovorima(itemId) {

        var confirmResult = confirm("Jeste li sigurni?");

        if (confirmResult) {
            // If the user clicks "OK", continue to the action
            window.location.href = "@Url.Action("uPregovorima", "Pregled")" + "?id=" + @Model.Id;
        }

        // Return false to prevent the default link behavior
        return false;
    }
</script>

<script>

    const dataTableBasic = new simpleDatatables.DataTable("#datatable-basic", {

        searchable: true,

    });

    var win = navigator.platform.indexOf('Win') > -1;

    if (win && document.querySelector('#sidenav-scrollbar')) {

        var options = {

            damping: '0.5'

        }

        Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);

    }

</script>